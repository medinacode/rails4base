<div class="col-md-10 col-md-offset-1 ajax_form">
  <%%= form_for(@<%= singular_table_name %>, :html => { :class => 'validate' }) do |f| %>
<% attributes.each do |attribute| -%>
<% if attribute.password_digest? -%>
  <div class="form-group">
    <%%= f.label :<%= attribute.column_name %>, :<%= attribute.column_name %>.to_s.titleize unless action_name == 'edit' %>
    <%%= f.label :<%= attribute.column_name %>, text_tip(:<%= attribute.column_name %>.to_s.titleize, 'Enter a new <%= attribute.column_name %> to change') if action_name == 'edit' %>
    <%%= f.password_field :<%= attribute.column_name %>,
            :data => jquery_validation(<%= singular_table_name.camelize %>.validators_on(:<%= attribute.column_name %>)),
            class: 'form-control input-lg' %>
  </div>
  <div class="form-group">
    <%%= f.label :password_confirmation, 'Confirm Password' %>
    <%%= f.password_field :password_confirmation,
            :data => { :'rule-equalTo' => '#<%= singular_table_name %>_password', :'msg-equalTo' => 'Password and confirm password must match' },
            class: 'form-control input-lg' %>
  </div>
<% else -%>
  <div class="form-group">
<% if attribute.type == :boolean -%>
    <div class="checkbox checkbox-circle checkbox-success input-lg">
      <%%= f.<%= attribute.field_type %> :<%= attribute.column_name %>,
            :data => jquery_validation(<%= singular_table_name.camelize %>.validators_on(:<%= attribute.column_name %>)) %>
      <%%= f.label :<%= attribute.column_name %>, :<%= attribute.column_name %>.to_s.titleize %>
    </div>
<% else -%>
    <%%= f.label :<%= attribute.column_name %>, :<%= attribute.column_name %>.to_s.titleize %>
    <%%= f.<%= attribute.field_type %> :<%= attribute.column_name %>,
            :data => jquery_validation(<%= singular_table_name.camelize %>.validators_on(:<%= attribute.column_name %>)),
            class: 'form-control input-lg' %>
<% end -%>
  </div>
<% end -%>
<% end -%>
<%% end %>
</div>